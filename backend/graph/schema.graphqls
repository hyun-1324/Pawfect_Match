type User {
  id: ID!
  dogName: String!
  picture: String
  bio: Bio
  profile: Profile
}

type Bio {
  id: ID!
  user: User!
  preferredGender: String
  preferredNeutered: Boolean
  gender: String
  neutered: Boolean
  size: Float
  energyLevel: String
  favoritePlayStyle: String
  age: Int
  preferredDistance: Int
  preferredLocation: String
}

type Profile {
  id: ID!
  user: User!
  aboutMe: String
}

type Message {
  id: ID!
  content: String!
  senderId: String!
  receiverId: String!
  timestamp: String!
  sender: User
  receiver: User
}

type Query {
  # User queries
  user(id: ID!): User
  bio(id: ID!): Bio
  profile(id: ID!): Profile

  # Current user queries
  me: User
  myBio: Bio
  myProfile: Profile

  # List queries
  recommendations: [User!]
  connections: [User!]
}

type Mutation {
  # User mutations
  updateProfile(aboutMe: String): Profile!
  updateBio(
    preferredGender: String
    preferredNeutered: Boolean
    preferredDistance: Int
    preferredLocation: String
  ): Bio!

  # Connection mutations
  createConnection(userId: ID!): Boolean!
  removeConnection(userId: ID!): Boolean!
}

type Subscription {
  # Realtime features
  newMessage(userId: ID!): Message!
  userOnlineStatus(userId: ID!): Boolean!
}
